---
name: Rust

"on":
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_TEST_DEBUG: 0

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest

    outputs:
      any_changed: ${{ steps.detect-changes.outputs.any_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: detect-changes
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.rs
            **/*.toml

      - name: Print changed files
        run: |
          for file in ${{ steps.detect-changes.outputs.all_changed_files }}; do
            echo "$file"
          done

  lint:
    name: Lint Rust code
    runs-on: ubuntu-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.any_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.7.3

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  style:
    name: Check Rust style
    runs-on: ubuntu-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.any_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.7.3

      - name: Run Rustfmt
        run: cargo fmt --all -- --check

  test:
    name: Run Rust tests
    runs-on: ubuntu-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.any_changed == 'true'

    container:
      # Code coverage is run inside the tarpaulin container with elevated
      # privileges so that it can instrument the code and collect coverage data.
      image: xd009642/tarpaulin:0.30.0
      options: --security-opt seccomp=unconfined

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: swatinem/rust-cache@v2.7.3

      - name: Run tests with test coverage
        run: |
          cargo tarpaulin \
            --all-features \
            --engine llvm \
            --out Xml \
            --skip-clean \
            --target-dir target/tarpaulin-target/ \
            --timeout 120 \
            --verbose

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
